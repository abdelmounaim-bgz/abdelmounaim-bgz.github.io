{"expireTime":9007200846414280000,"key":"gatsby-plugin-mdx-entire-payload-bf084acf68204b94ccc62b9dab9cfc38-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/stoanc/projects/Portfolio/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"import","value":"import {format} from 'date-fns'\nimport { mix } from '@theme-ui/color'\nimport Footer from '../components/footer';","position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":9,"column":43,"offset":280},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Expériences professionnelles","position":{"start":{"line":11,"column":3,"offset":286},"end":{"line":11,"column":31,"offset":314},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":284},"end":{"line":11,"column":32,"offset":315},"indent":[]}},{"type":"jsx","value":"<SourceList filter='posts'>\n  {posts => (\n    <Flex\n      sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`,\n      }}\n    >\n      {posts.map((edge, index) => {\n        const {\n          frontmatter: { title, date, tags },\n          fields: { slug },\n        } = edge.node\n        return (\n          <Box\n            key={index}\n            sx={{ mb: 3, maxWidth: ['100%', '50%'], width: ['100%', '50%'] }}\n          >\n            <Link href={slug} sx={{textDecoration: 'none'}}>\n              <Card\n                sx={{\n                  ml: 2, \n                  mr: 2,\n                  p: 3,\n                }}\n              > \n                <Text sx={{fontSize:0, color:'muted'}}>{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{color: 'text'}}>{title}</Heading>\n                {tags.map((tag, index) => {\n                  const { name, count, percent } = tag\n                  return (\n                    <Badge\n                      key={index}\n                      variant='primary'\n                      sx={{\n                        mr: 2,\n                        mb: 2,\n                        color: mix('success', 'secondary', `${index / tags.length}`),\n                        borderColor: mix(\n                          'success',\n                          'secondary',\n                          `${index / tags.length}`\n                        ),\n                      }}\n                    >\n                      {tag}\n                    </Badge>\n                  )\n                })}\n                <Text sx={{textDecoration: 'underline'}}>Plus de détails</Text>\n              </Card>\n            </Link>\n          </Box>\n        )\n      })}\n    </Flex>\n  )}\n</SourceList>\n<Footer/>","position":{"start":{"line":13,"column":1,"offset":319},"end":{"line":72,"column":10,"offset":2205},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":75,"column":1,"offset":2209},"end":{"line":75,"column":31,"offset":2239},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":75,"column":31,"offset":2239}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"C:/stoanc/projects/Portfolio/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\"\nimport {format} from 'date-fns'\nimport { mix } from '@theme-ui/color'\nimport Footer from '../components/footer';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst Card = makeShortcode(\"Card\");\nconst Text = makeShortcode(\"Text\");\nconst Heading = makeShortcode(\"Heading\");\nconst Badge = makeShortcode(\"Badge\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Expériences professionnelles`}</h1>\n    <SourceList filter='posts' mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              tags\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: ['100%', '50%'],\n            width: ['100%', '50%']\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                {tags.map((tag, index) => {\n                  const {\n                    name,\n                    count,\n                    percent\n                  } = tag;\n                  return <Badge key={index} variant='primary' sx={{\n                    mr: 2,\n                    mb: 2,\n                    color: mix('success', 'secondary', `${index / tags.length}`),\n                    borderColor: mix('success', 'secondary', `${index / tags.length}`)\n                  }} mdxType=\"Badge\">\n                      {tag}\n                    </Badge>;\n                })}\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">Plus de détails</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Footer mdxType=\"Footer\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}